// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: pkg/proto/v3/apiv3.proto

package v3

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimeOrdering int32

const (
	TimeOrdering_ASCENDING  TimeOrdering = 0
	TimeOrdering_DESCENDING TimeOrdering = 1
)

// Enum value maps for TimeOrdering.
var (
	TimeOrdering_name = map[int32]string{
		0: "ASCENDING",
		1: "DESCENDING",
	}
	TimeOrdering_value = map[string]int32{
		"ASCENDING":  0,
		"DESCENDING": 1,
	}
)

func (x TimeOrdering) Enum() *TimeOrdering {
	p := new(TimeOrdering)
	*p = x
	return p
}

func (x TimeOrdering) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeOrdering) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_v3_apiv3_proto_enumTypes[0].Descriptor()
}

func (TimeOrdering) Type() protoreflect.EnumType {
	return &file_pkg_proto_v3_apiv3_proto_enumTypes[0]
}

func (x TimeOrdering) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeOrdering.Descriptor instead.
func (TimeOrdering) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{0}
}

type GetOptionsRequest_QueryType int32

const (
	GetOptionsRequest_GetMetricHistory   GetOptionsRequest_QueryType = 0
	GetOptionsRequest_GetMetricValue     GetOptionsRequest_QueryType = 1
	GetOptionsRequest_GetMetricAggregate GetOptionsRequest_QueryType = 2
)

// Enum value maps for GetOptionsRequest_QueryType.
var (
	GetOptionsRequest_QueryType_name = map[int32]string{
		0: "GetMetricHistory",
		1: "GetMetricValue",
		2: "GetMetricAggregate",
	}
	GetOptionsRequest_QueryType_value = map[string]int32{
		"GetMetricHistory":   0,
		"GetMetricValue":     1,
		"GetMetricAggregate": 2,
	}
)

func (x GetOptionsRequest_QueryType) Enum() *GetOptionsRequest_QueryType {
	p := new(GetOptionsRequest_QueryType)
	*p = x
	return p
}

func (x GetOptionsRequest_QueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetOptionsRequest_QueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_v3_apiv3_proto_enumTypes[1].Descriptor()
}

func (GetOptionsRequest_QueryType) Type() protoreflect.EnumType {
	return &file_pkg_proto_v3_apiv3_proto_enumTypes[1]
}

func (x GetOptionsRequest_QueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetOptionsRequest_QueryType.Descriptor instead.
func (GetOptionsRequest_QueryType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{4, 0}
}

type Option_Type int32

const (
	Option_Enum    Option_Type = 0 // enum is rendered as a Select control in the frontend
	Option_Boolean Option_Type = 1
)

// Enum value maps for Option_Type.
var (
	Option_Type_name = map[int32]string{
		0: "Enum",
		1: "Boolean",
	}
	Option_Type_value = map[string]int32{
		"Enum":    0,
		"Boolean": 1,
	}
)

func (x Option_Type) Enum() *Option_Type {
	p := new(Option_Type)
	*p = x
	return p
}

func (x Option_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Option_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_v3_apiv3_proto_enumTypes[2].Descriptor()
}

func (Option_Type) Type() protoreflect.EnumType {
	return &file_pkg_proto_v3_apiv3_proto_enumTypes[2]
}

func (x Option_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Option_Type.Descriptor instead.
func (Option_Type) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{6, 0}
}

type FrameMeta_FrameType int32

const (
	FrameMeta_FrameTypeUnknown          FrameMeta_FrameType = 0
	FrameMeta_FrameTypeTimeSeriesWide   FrameMeta_FrameType = 1
	FrameMeta_FrameTypeTimeSeriesLong   FrameMeta_FrameType = 2
	FrameMeta_FrameTypeTimeSeriesMany   FrameMeta_FrameType = 3
	FrameMeta_FrameTypeDirectoryListing FrameMeta_FrameType = 4
	FrameMeta_FrameTypeTable            FrameMeta_FrameType = 5
)

// Enum value maps for FrameMeta_FrameType.
var (
	FrameMeta_FrameType_name = map[int32]string{
		0: "FrameTypeUnknown",
		1: "FrameTypeTimeSeriesWide",
		2: "FrameTypeTimeSeriesLong",
		3: "FrameTypeTimeSeriesMany",
		4: "FrameTypeDirectoryListing",
		5: "FrameTypeTable",
	}
	FrameMeta_FrameType_value = map[string]int32{
		"FrameTypeUnknown":          0,
		"FrameTypeTimeSeriesWide":   1,
		"FrameTypeTimeSeriesLong":   2,
		"FrameTypeTimeSeriesMany":   3,
		"FrameTypeDirectoryListing": 4,
		"FrameTypeTable":            5,
	}
)

func (x FrameMeta_FrameType) Enum() *FrameMeta_FrameType {
	p := new(FrameMeta_FrameType)
	*p = x
	return p
}

func (x FrameMeta_FrameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrameMeta_FrameType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_v3_apiv3_proto_enumTypes[3].Descriptor()
}

func (FrameMeta_FrameType) Type() protoreflect.EnumType {
	return &file_pkg_proto_v3_apiv3_proto_enumTypes[3]
}

func (x FrameMeta_FrameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrameMeta_FrameType.Descriptor instead.
func (FrameMeta_FrameType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{18, 0}
}

// VisType is used to indicate how the data should be visualized in explore.
type FrameMeta_VisType int32

const (
	// VisTypeGraph indicates the response should be visualized using a graph.
	FrameMeta_VisTypeGraph FrameMeta_VisType = 0
	// VisTypeTable indicates the response should be visualized using a table.
	FrameMeta_VisTypeTable FrameMeta_VisType = 1
	// VisTypeLogs indicates the response should be visualized using a logs visualization.
	FrameMeta_VisTypeLogs FrameMeta_VisType = 2
	// VisTypeTrace indicates the response should be visualized using a trace view visualization.
	FrameMeta_VisTypeTrace FrameMeta_VisType = 3
	// VisTypeNodeGraph indicates the response should be visualized using a node graph visualization.
	FrameMeta_VisTypeNodeGraph FrameMeta_VisType = 4
)

// Enum value maps for FrameMeta_VisType.
var (
	FrameMeta_VisType_name = map[int32]string{
		0: "VisTypeGraph",
		1: "VisTypeTable",
		2: "VisTypeLogs",
		3: "VisTypeTrace",
		4: "VisTypeNodeGraph",
	}
	FrameMeta_VisType_value = map[string]int32{
		"VisTypeGraph":     0,
		"VisTypeTable":     1,
		"VisTypeLogs":      2,
		"VisTypeTrace":     3,
		"VisTypeNodeGraph": 4,
	}
)

func (x FrameMeta_VisType) Enum() *FrameMeta_VisType {
	p := new(FrameMeta_VisType)
	*p = x
	return p
}

func (x FrameMeta_VisType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrameMeta_VisType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_v3_apiv3_proto_enumTypes[4].Descriptor()
}

func (FrameMeta_VisType) Type() protoreflect.EnumType {
	return &file_pkg_proto_v3_apiv3_proto_enumTypes[4]
}

func (x FrameMeta_VisType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrameMeta_VisType.Descriptor instead.
func (FrameMeta_VisType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{18, 1}
}

type FrameMeta_Notice_NoticeSeverity int32

const (
	// NoticeSeverityInfo is informational severity.
	FrameMeta_Notice_NoticeSeverityInfo FrameMeta_Notice_NoticeSeverity = 0
	// NoticeSeverityWarning is warning severity.
	FrameMeta_Notice_NoticeSeverityWarning FrameMeta_Notice_NoticeSeverity = 1
	// NoticeSeverityError is error severity.
	FrameMeta_Notice_NoticeSeverityError FrameMeta_Notice_NoticeSeverity = 3
)

// Enum value maps for FrameMeta_Notice_NoticeSeverity.
var (
	FrameMeta_Notice_NoticeSeverity_name = map[int32]string{
		0: "NoticeSeverityInfo",
		1: "NoticeSeverityWarning",
		3: "NoticeSeverityError",
	}
	FrameMeta_Notice_NoticeSeverity_value = map[string]int32{
		"NoticeSeverityInfo":    0,
		"NoticeSeverityWarning": 1,
		"NoticeSeverityError":   3,
	}
)

func (x FrameMeta_Notice_NoticeSeverity) Enum() *FrameMeta_Notice_NoticeSeverity {
	p := new(FrameMeta_Notice_NoticeSeverity)
	*p = x
	return p
}

func (x FrameMeta_Notice_NoticeSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrameMeta_Notice_NoticeSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_v3_apiv3_proto_enumTypes[5].Descriptor()
}

func (FrameMeta_Notice_NoticeSeverity) Type() protoreflect.EnumType {
	return &file_pkg_proto_v3_apiv3_proto_enumTypes[5]
}

func (x FrameMeta_Notice_NoticeSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrameMeta_Notice_NoticeSeverity.Descriptor instead.
func (FrameMeta_Notice_NoticeSeverity) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{18, 0, 0}
}

type FrameMeta_Notice_InspectType int32

const (
	// InspectTypeNone is no suggestion for a tab of the panel editor in Grafana's user interface.
	FrameMeta_Notice_InspectTypeNone FrameMeta_Notice_InspectType = 0
	// InspectTypeMeta suggests the "meta" tab of the panel editor in Grafana's user interface.
	FrameMeta_Notice_InspectTypeMeta FrameMeta_Notice_InspectType = 1
	// InspectTypeError suggests the "error" tab of the panel editor in Grafana's user interface.
	FrameMeta_Notice_InspectTypeError FrameMeta_Notice_InspectType = 2
	// InspectTypeData suggests the "data" tab of the panel editor in Grafana's user interface.
	FrameMeta_Notice_InspectTypeData FrameMeta_Notice_InspectType = 3
	// InspectTypeStats suggests the "stats" tab of the panel editor in Grafana's user interface.
	FrameMeta_Notice_InspectTypeStats FrameMeta_Notice_InspectType = 4
)

// Enum value maps for FrameMeta_Notice_InspectType.
var (
	FrameMeta_Notice_InspectType_name = map[int32]string{
		0: "InspectTypeNone",
		1: "InspectTypeMeta",
		2: "InspectTypeError",
		3: "InspectTypeData",
		4: "InspectTypeStats",
	}
	FrameMeta_Notice_InspectType_value = map[string]int32{
		"InspectTypeNone":  0,
		"InspectTypeMeta":  1,
		"InspectTypeError": 2,
		"InspectTypeData":  3,
		"InspectTypeStats": 4,
	}
)

func (x FrameMeta_Notice_InspectType) Enum() *FrameMeta_Notice_InspectType {
	p := new(FrameMeta_Notice_InspectType)
	*p = x
	return p
}

func (x FrameMeta_Notice_InspectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrameMeta_Notice_InspectType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_v3_apiv3_proto_enumTypes[6].Descriptor()
}

func (FrameMeta_Notice_InspectType) Type() protoreflect.EnumType {
	return &file_pkg_proto_v3_apiv3_proto_enumTypes[6]
}

func (x FrameMeta_Notice_InspectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrameMeta_Notice_InspectType.Descriptor instead.
func (FrameMeta_Notice_InspectType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{18, 0, 1}
}

type ListMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimensions []*Dimension `protobuf:"bytes,1,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	Filter     string       `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListMetricsRequest) Reset() {
	*x = ListMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsRequest) ProtoMessage() {}

func (x *ListMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListMetricsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{0}
}

func (x *ListMetricsRequest) GetDimensions() []*Dimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *ListMetricsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*ListMetricsResponse_Metric `protobuf:"bytes,1,rep,name=Metrics,proto3" json:"Metrics,omitempty"`
}

func (x *ListMetricsResponse) Reset() {
	*x = ListMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsResponse) ProtoMessage() {}

func (x *ListMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListMetricsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{1}
}

func (x *ListMetricsResponse) GetMetrics() []*ListMetricsResponse_Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type GetMetricValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimensions []*Dimension      `protobuf:"bytes,1,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	Metrics    []string          `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	Options    map[string]string `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMetricValueRequest) Reset() {
	*x = GetMetricValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricValueRequest) ProtoMessage() {}

func (x *GetMetricValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricValueRequest.ProtoReflect.Descriptor instead.
func (*GetMetricValueRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{2}
}

func (x *GetMetricValueRequest) GetDimensions() []*Dimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GetMetricValueRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetMetricValueRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetMetricValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames []*GetMetricValueResponse_Frame `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
}

func (x *GetMetricValueResponse) Reset() {
	*x = GetMetricValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricValueResponse) ProtoMessage() {}

func (x *GetMetricValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricValueResponse.ProtoReflect.Descriptor instead.
func (*GetMetricValueResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{3}
}

func (x *GetMetricValueResponse) GetFrames() []*GetMetricValueResponse_Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

type GetOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the query type for which options are requested
	QueryType GetOptionsRequest_QueryType `protobuf:"varint,1,opt,name=queryType,proto3,enum=grafanav3.GetOptionsRequest_QueryType" json:"queryType,omitempty"`
}

func (x *GetOptionsRequest) Reset() {
	*x = GetOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOptionsRequest) ProtoMessage() {}

func (x *GetOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOptionsRequest.ProtoReflect.Descriptor instead.
func (*GetOptionsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{4}
}

func (x *GetOptionsRequest) GetQueryType() GetOptionsRequest_QueryType {
	if x != nil {
		return x.QueryType
	}
	return GetOptionsRequest_GetMetricHistory
}

type EnumValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the enum value
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the description of the option
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// the label of the option
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *EnumValue) Reset() {
	*x = EnumValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumValue) ProtoMessage() {}

func (x *EnumValue) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumValue.ProtoReflect.Descriptor instead.
func (*EnumValue) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{5}
}

func (x *EnumValue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EnumValue) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EnumValue) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the option
	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type        Option_Type  `protobuf:"varint,3,opt,name=type,proto3,enum=grafanav3.Option_Type" json:"type,omitempty"`
	EnumValues  []*EnumValue `protobuf:"bytes,4,rep,name=enumValues,proto3" json:"enumValues,omitempty"`
	Required    bool         `protobuf:"varint,5,opt,name=required,proto3" json:"required,omitempty"`
	// the label of the option
	Label string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *Option) Reset() {
	*x = Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Option) ProtoMessage() {}

func (x *Option) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Option.ProtoReflect.Descriptor instead.
func (*Option) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{6}
}

func (x *Option) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Option) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Option) GetType() Option_Type {
	if x != nil {
		return x.Type
	}
	return Option_Enum
}

func (x *Option) GetEnumValues() []*EnumValue {
	if x != nil {
		return x.EnumValues
	}
	return nil
}

func (x *Option) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Option) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type GetOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options []*Option `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *GetOptionsResponse) Reset() {
	*x = GetOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOptionsResponse) ProtoMessage() {}

func (x *GetOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOptionsResponse.ProtoReflect.Descriptor instead.
func (*GetOptionsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{7}
}

func (x *GetOptionsResponse) GetOptions() []*Option {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetMetricAggregateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The dimensions for the query
	Dimensions []*Dimension `protobuf:"bytes,1,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	// the metrics for which the aggregates are retrieved
	Metrics       []string               `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=endDate,proto3" json:"endDate,omitempty"`
	MaxItems      int64                  `protobuf:"varint,6,opt,name=maxItems,proto3" json:"maxItems,omitempty"`
	TimeOrdering  TimeOrdering           `protobuf:"varint,7,opt,name=timeOrdering,proto3,enum=grafanav3.TimeOrdering" json:"timeOrdering,omitempty"`
	StartingToken string                 `protobuf:"bytes,8,opt,name=startingToken,proto3" json:"startingToken,omitempty"`
	IntervalMs    int64                  `protobuf:"varint,9,opt,name=intervalMs,proto3" json:"intervalMs,omitempty"`
	Options       map[string]string      `protobuf:"bytes,10,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMetricAggregateRequest) Reset() {
	*x = GetMetricAggregateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricAggregateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricAggregateRequest) ProtoMessage() {}

func (x *GetMetricAggregateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricAggregateRequest.ProtoReflect.Descriptor instead.
func (*GetMetricAggregateRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{8}
}

func (x *GetMetricAggregateRequest) GetDimensions() []*Dimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GetMetricAggregateRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetMetricAggregateRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetMetricAggregateRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetMetricAggregateRequest) GetMaxItems() int64 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *GetMetricAggregateRequest) GetTimeOrdering() TimeOrdering {
	if x != nil {
		return x.TimeOrdering
	}
	return TimeOrdering_ASCENDING
}

func (x *GetMetricAggregateRequest) GetStartingToken() string {
	if x != nil {
		return x.StartingToken
	}
	return ""
}

func (x *GetMetricAggregateRequest) GetIntervalMs() int64 {
	if x != nil {
		return x.IntervalMs
	}
	return 0
}

func (x *GetMetricAggregateRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetMetricAggregateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames    []*Frame `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
	NextToken string   `protobuf:"bytes,2,opt,name=nextToken,proto3" json:"nextToken,omitempty"`
}

func (x *GetMetricAggregateResponse) Reset() {
	*x = GetMetricAggregateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricAggregateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricAggregateResponse) ProtoMessage() {}

func (x *GetMetricAggregateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricAggregateResponse.ProtoReflect.Descriptor instead.
func (*GetMetricAggregateResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{9}
}

func (x *GetMetricAggregateResponse) GetFrames() []*Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

func (x *GetMetricAggregateResponse) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

type GetMetricHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimensions    []*Dimension           `protobuf:"bytes,3,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	Metrics       []string               `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=endDate,proto3" json:"endDate,omitempty"`
	MaxItems      int64                  `protobuf:"varint,7,opt,name=maxItems,proto3" json:"maxItems,omitempty"`
	TimeOrdering  TimeOrdering           `protobuf:"varint,8,opt,name=timeOrdering,proto3,enum=grafanav3.TimeOrdering" json:"timeOrdering,omitempty"`
	StartingToken string                 `protobuf:"bytes,9,opt,name=startingToken,proto3" json:"startingToken,omitempty"`
	Options       map[string]string      `protobuf:"bytes,10,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMetricHistoryRequest) Reset() {
	*x = GetMetricHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricHistoryRequest) ProtoMessage() {}

func (x *GetMetricHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetMetricHistoryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{10}
}

func (x *GetMetricHistoryRequest) GetDimensions() []*Dimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GetMetricHistoryRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetMetricHistoryRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetMetricHistoryRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetMetricHistoryRequest) GetMaxItems() int64 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *GetMetricHistoryRequest) GetTimeOrdering() TimeOrdering {
	if x != nil {
		return x.TimeOrdering
	}
	return TimeOrdering_ASCENDING
}

func (x *GetMetricHistoryRequest) GetStartingToken() string {
	if x != nil {
		return x.StartingToken
	}
	return ""
}

func (x *GetMetricHistoryRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetMetricHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames    []*Frame `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
	NextToken string   `protobuf:"bytes,2,opt,name=nextToken,proto3" json:"nextToken,omitempty"`
}

func (x *GetMetricHistoryResponse) Reset() {
	*x = GetMetricHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricHistoryResponse) ProtoMessage() {}

func (x *GetMetricHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetMetricHistoryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{11}
}

func (x *GetMetricHistoryResponse) GetFrames() []*Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

func (x *GetMetricHistoryResponse) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{12}
}

func (x *Label) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Label) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels []*Label  `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
	Config *Config   `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	Values []float64 `protobuf:"fixed64,4,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{13}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Field) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Field) GetValues() []float64 {
	if x != nil {
		return x.Values
	}
	return nil
}

type ValueMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From  float64 `protobuf:"fixed64,1,opt,name=from,proto3" json:"from,omitempty"`
	To    float64 `protobuf:"fixed64,2,opt,name=to,proto3" json:"to,omitempty"`
	Value string  `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Text  string  `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Color string  `protobuf:"bytes,5,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *ValueMapping) Reset() {
	*x = ValueMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueMapping) ProtoMessage() {}

func (x *ValueMapping) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueMapping.ProtoReflect.Descriptor instead.
func (*ValueMapping) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{14}
}

func (x *ValueMapping) GetFrom() float64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *ValueMapping) GetTo() float64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *ValueMapping) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ValueMapping) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ValueMapping) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit     string          `protobuf:"bytes,1,opt,name=unit,proto3" json:"unit,omitempty"`
	Mappings []*ValueMapping `protobuf:"bytes,2,rep,name=Mappings,proto3" json:"Mappings,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{15}
}

func (x *Config) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Config) GetMappings() []*ValueMapping {
	if x != nil {
		return x.Mappings
	}
	return nil
}

type SingleValueField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels []*Label `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
	Config *Config  `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	Value  float64  `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SingleValueField) Reset() {
	*x = SingleValueField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleValueField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleValueField) ProtoMessage() {}

func (x *SingleValueField) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleValueField.ProtoReflect.Descriptor instead.
func (*SingleValueField) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{16}
}

func (x *SingleValueField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SingleValueField) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *SingleValueField) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *SingleValueField) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// The data frame for each metric
type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metric     string                   `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	Timestamps []*timestamppb.Timestamp `protobuf:"bytes,2,rep,name=timestamps,proto3" json:"timestamps,omitempty"`
	Fields     []*Field                 `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	Meta       *FrameMeta               `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{17}
}

func (x *Frame) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *Frame) GetTimestamps() []*timestamppb.Timestamp {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *Frame) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Frame) GetMeta() *FrameMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

// FrameMeta matches:
// https://github.com/grafana/grafana/blob/master/packages/grafana-data/src/types/data.ts#L11
// NOTE -- in javascript this can accept any `[key: string]: any;` however
// this interface only exposes the values we want to be exposed
type FrameMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type asserts that the frame matches a known type structure
	Type FrameMeta_FrameType `protobuf:"varint,1,opt,name=type,proto3,enum=grafanav3.FrameMeta_FrameType" json:"type,omitempty"`
	// Notices provide additional information about the data in the Frame that
	// Grafana can display to the user in the user interface.
	Notices []*FrameMeta_Notice `protobuf:"bytes,6,rep,name=Notices,proto3" json:"Notices,omitempty"`
	// PreferredVisualization is currently used to show results in Explore only in preferred visualisation option.
	PreferredVisualization FrameMeta_VisType `protobuf:"varint,8,opt,name=PreferredVisualization,proto3,enum=grafanav3.FrameMeta_VisType" json:"PreferredVisualization,omitempty"`
	// ExecutedQueryString is the raw query sent to the underlying system. All macros and templating
	// have been applied.  When metadata contains this value, it will be shown in the query inspector.
	ExecutedQueryString string `protobuf:"bytes,9,opt,name=executedQueryString,proto3" json:"executedQueryString,omitempty"`
}

func (x *FrameMeta) Reset() {
	*x = FrameMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameMeta) ProtoMessage() {}

func (x *FrameMeta) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameMeta.ProtoReflect.Descriptor instead.
func (*FrameMeta) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{18}
}

func (x *FrameMeta) GetType() FrameMeta_FrameType {
	if x != nil {
		return x.Type
	}
	return FrameMeta_FrameTypeUnknown
}

func (x *FrameMeta) GetNotices() []*FrameMeta_Notice {
	if x != nil {
		return x.Notices
	}
	return nil
}

func (x *FrameMeta) GetPreferredVisualization() FrameMeta_VisType {
	if x != nil {
		return x.PreferredVisualization
	}
	return FrameMeta_VisTypeGraph
}

func (x *FrameMeta) GetExecutedQueryString() string {
	if x != nil {
		return x.ExecutedQueryString
	}
	return ""
}

type ListDimensionKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter             string       `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	SelectedDimensions []*Dimension `protobuf:"bytes,2,rep,name=selected_dimensions,json=selectedDimensions,proto3" json:"selected_dimensions,omitempty"`
}

func (x *ListDimensionKeysRequest) Reset() {
	*x = ListDimensionKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionKeysRequest) ProtoMessage() {}

func (x *ListDimensionKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionKeysRequest.ProtoReflect.Descriptor instead.
func (*ListDimensionKeysRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{19}
}

func (x *ListDimensionKeysRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListDimensionKeysRequest) GetSelectedDimensions() []*Dimension {
	if x != nil {
		return x.SelectedDimensions
	}
	return nil
}

type ListDimensionKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ListDimensionKeysResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ListDimensionKeysResponse) Reset() {
	*x = ListDimensionKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionKeysResponse) ProtoMessage() {}

func (x *ListDimensionKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionKeysResponse.ProtoReflect.Descriptor instead.
func (*ListDimensionKeysResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{20}
}

func (x *ListDimensionKeysResponse) GetResults() []*ListDimensionKeysResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListDimensionValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DimensionKey       string       `protobuf:"bytes,1,opt,name=dimension_key,json=dimensionKey,proto3" json:"dimension_key,omitempty"`
	Filter             string       `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	SelectedDimensions []*Dimension `protobuf:"bytes,3,rep,name=selected_dimensions,json=selectedDimensions,proto3" json:"selected_dimensions,omitempty"`
}

func (x *ListDimensionValuesRequest) Reset() {
	*x = ListDimensionValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionValuesRequest) ProtoMessage() {}

func (x *ListDimensionValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionValuesRequest.ProtoReflect.Descriptor instead.
func (*ListDimensionValuesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{21}
}

func (x *ListDimensionValuesRequest) GetDimensionKey() string {
	if x != nil {
		return x.DimensionKey
	}
	return ""
}

func (x *ListDimensionValuesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListDimensionValuesRequest) GetSelectedDimensions() []*Dimension {
	if x != nil {
		return x.SelectedDimensions
	}
	return nil
}

type ListDimensionValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ListDimensionValuesResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ListDimensionValuesResponse) Reset() {
	*x = ListDimensionValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionValuesResponse) ProtoMessage() {}

func (x *ListDimensionValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionValuesResponse.ProtoReflect.Descriptor instead.
func (*ListDimensionValuesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{22}
}

func (x *ListDimensionValuesResponse) GetResults() []*ListDimensionValuesResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type TimeRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromEpochMS int64 `protobuf:"varint,1,opt,name=fromEpochMS,proto3" json:"fromEpochMS,omitempty"`
	ToEpochMS   int64 `protobuf:"varint,2,opt,name=toEpochMS,proto3" json:"toEpochMS,omitempty"`
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{23}
}

func (x *TimeRange) GetFromEpochMS() int64 {
	if x != nil {
		return x.FromEpochMS
	}
	return 0
}

func (x *TimeRange) GetToEpochMS() int64 {
	if x != nil {
		return x.ToEpochMS
	}
	return 0
}

type Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Dimension) Reset() {
	*x = Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimension) ProtoMessage() {}

func (x *Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimension.ProtoReflect.Descriptor instead.
func (*Dimension) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{24}
}

func (x *Dimension) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Dimension) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefId         string     `protobuf:"bytes,1,opt,name=refId,proto3" json:"refId,omitempty"`
	MaxDataPoints int64      `protobuf:"varint,2,opt,name=maxDataPoints,proto3" json:"maxDataPoints,omitempty"`
	IntervalMS    int64      `protobuf:"varint,3,opt,name=intervalMS,proto3" json:"intervalMS,omitempty"`
	TimeRange     *TimeRange `protobuf:"bytes,4,opt,name=timeRange,proto3" json:"timeRange,omitempty"`
	// The offset for the result set
	StartKey   int64        `protobuf:"varint,5,opt,name=startKey,proto3" json:"startKey,omitempty"`
	Dimensions []*Dimension `protobuf:"bytes,6,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{25}
}

func (x *QueryRequest) GetRefId() string {
	if x != nil {
		return x.RefId
	}
	return ""
}

func (x *QueryRequest) GetMaxDataPoints() int64 {
	if x != nil {
		return x.MaxDataPoints
	}
	return 0
}

func (x *QueryRequest) GetIntervalMS() int64 {
	if x != nil {
		return x.IntervalMS
	}
	return 0
}

func (x *QueryRequest) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *QueryRequest) GetStartKey() int64 {
	if x != nil {
		return x.StartKey
	}
	return 0
}

func (x *QueryRequest) GetDimensions() []*Dimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

// The response message containing the greetings
type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefId   string                 `protobuf:"bytes,1,opt,name=refId,proto3" json:"refId,omitempty"`
	NextKey int64                  `protobuf:"varint,2,opt,name=nextKey,proto3" json:"nextKey,omitempty"`
	Values  []*QueryResponse_Value `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{26}
}

func (x *QueryResponse) GetRefId() string {
	if x != nil {
		return x.RefId
	}
	return ""
}

func (x *QueryResponse) GetNextKey() int64 {
	if x != nil {
		return x.NextKey
	}
	return 0
}

func (x *QueryResponse) GetValues() []*QueryResponse_Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type ListMetricsResponse_Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ListMetricsResponse_Metric) Reset() {
	*x = ListMetricsResponse_Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsResponse_Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsResponse_Metric) ProtoMessage() {}

func (x *ListMetricsResponse_Metric) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsResponse_Metric.ProtoReflect.Descriptor instead.
func (*ListMetricsResponse_Metric) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListMetricsResponse_Metric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListMetricsResponse_Metric) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetMetricValueResponse_Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metric    string                 `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Fields    []*SingleValueField    `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	Meta      *FrameMeta             `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetMetricValueResponse_Frame) Reset() {
	*x = GetMetricValueResponse_Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricValueResponse_Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricValueResponse_Frame) ProtoMessage() {}

func (x *GetMetricValueResponse_Frame) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricValueResponse_Frame.ProtoReflect.Descriptor instead.
func (*GetMetricValueResponse_Frame) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetMetricValueResponse_Frame) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *GetMetricValueResponse_Frame) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GetMetricValueResponse_Frame) GetFields() []*SingleValueField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *GetMetricValueResponse_Frame) GetMeta() *FrameMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type FrameMeta_Notice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Severity is the severity level of the notice: info, warning, or error.
	Severity FrameMeta_Notice_NoticeSeverity `protobuf:"varint,1,opt,name=Severity,proto3,enum=grafanav3.FrameMeta_Notice_NoticeSeverity" json:"Severity,omitempty"`
	// Text is freeform descriptive text for the notice.
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// Link is an optional link for display in the user interface and can be an
	// absolute URL or a path relative to Grafana's root url.
	Link string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	// Inspect is an optional suggestion for which tab to display in the panel inspector
	// in Grafana's User interface. Can be meta, error, data, or stats.
	Inspect FrameMeta_Notice_InspectType `protobuf:"varint,4,opt,name=inspect,proto3,enum=grafanav3.FrameMeta_Notice_InspectType" json:"inspect,omitempty"`
}

func (x *FrameMeta_Notice) Reset() {
	*x = FrameMeta_Notice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameMeta_Notice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameMeta_Notice) ProtoMessage() {}

func (x *FrameMeta_Notice) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameMeta_Notice.ProtoReflect.Descriptor instead.
func (*FrameMeta_Notice) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{18, 0}
}

func (x *FrameMeta_Notice) GetSeverity() FrameMeta_Notice_NoticeSeverity {
	if x != nil {
		return x.Severity
	}
	return FrameMeta_Notice_NoticeSeverityInfo
}

func (x *FrameMeta_Notice) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *FrameMeta_Notice) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *FrameMeta_Notice) GetInspect() FrameMeta_Notice_InspectType {
	if x != nil {
		return x.Inspect
	}
	return FrameMeta_Notice_InspectTypeNone
}

type ListDimensionKeysResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ListDimensionKeysResponse_Result) Reset() {
	*x = ListDimensionKeysResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionKeysResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionKeysResponse_Result) ProtoMessage() {}

func (x *ListDimensionKeysResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionKeysResponse_Result.ProtoReflect.Descriptor instead.
func (*ListDimensionKeysResponse_Result) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{20, 0}
}

func (x *ListDimensionKeysResponse_Result) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListDimensionKeysResponse_Result) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ListDimensionValuesResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value       string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ListDimensionValuesResponse_Result) Reset() {
	*x = ListDimensionValuesResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionValuesResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionValuesResponse_Result) ProtoMessage() {}

func (x *ListDimensionValuesResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionValuesResponse_Result.ProtoReflect.Descriptor instead.
func (*ListDimensionValuesResponse_Result) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{22, 0}
}

func (x *ListDimensionValuesResponse_Result) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ListDimensionValuesResponse_Result) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type QueryResponse_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value     float32 `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *QueryResponse_Value) Reset() {
	*x = QueryResponse_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse_Value) ProtoMessage() {}

func (x *QueryResponse_Value) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v3_apiv3_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse_Value.ProtoReflect.Descriptor instead.
func (*QueryResponse_Value) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v3_apiv3_proto_rawDescGZIP(), []int{26, 0}
}

func (x *QueryResponse_Value) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *QueryResponse_Value) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_pkg_proto_v3_apiv3_proto protoreflect.FileDescriptor

var file_pkg_proto_v3_apiv3_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x33, 0x2f, 0x61,
	0x70, 0x69, 0x76, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x72, 0x61, 0x66,
	0x61, 0x6e, 0x61, 0x76, 0x33, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a,
	0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x96, 0x01, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x1a, 0x3e, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xec, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x44, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x47, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x94, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0xb8,
	0x01, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x33, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72, 0x61,
	0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x28, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x44, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x10, 0x02, 0x22, 0x53, 0x0a, 0x09, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0xed, 0x01, 0x0a, 0x06, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61,
	0x76, 0x33, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x65, 0x6e,
	0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x1d, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x10, 0x01, 0x22, 0x41, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x83, 0x04, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x64, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61,
	0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61,
	0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67,
	0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x73, 0x12, 0x4b, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x72, 0x61,
	0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x64, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65,
	0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xdf, 0x03, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61,
	0x6e, 0x61, 0x76, 0x33, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x3b, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61,
	0x76, 0x33, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x0c, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x49, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3a,
	0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x62, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61,
	0x76, 0x33, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2f,
	0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x88, 0x01, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e,
	0x61, 0x76, 0x33, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x72, 0x0a, 0x0c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x51,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x08,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0x91, 0x01, 0x0a, 0x10, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61,
	0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x3a, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x28, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72,
	0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xaa, 0x07, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72, 0x61,
	0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x07, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x54, 0x0a, 0x16, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x56, 0x69, 0x73,
	0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x16,
	0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x93, 0x03, 0x0a, 0x06, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76,
	0x33, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x41, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33,
	0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x2e, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x69,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x22, 0x5c, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x00,
	0x12, 0x19, 0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x03, 0x22, 0x78, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x10, 0x04, 0x22, 0xab,
	0x01, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x57, 0x69, 0x64, 0x65, 0x10, 0x01, 0x12,
	0x1b, 0x0a, 0x17, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x05, 0x22, 0x66, 0x0a, 0x07,
	0x56, 0x69, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x69, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x69, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x56,
	0x69, 0x73, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x56, 0x69, 0x73, 0x54, 0x79, 0x70, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x10, 0x03, 0x12, 0x14,
	0x0a, 0x10, 0x56, 0x69, 0x73, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x10, 0x04, 0x22, 0x79, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x13, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76,
	0x33, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xa0, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x1a, 0x3c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xa0, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x45,
	0x0a, 0x13, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72,
	0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x12, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61,
	0x76, 0x33, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x40,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x4b, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x4d, 0x53, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x4d, 0x53, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x4d, 0x53, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x4d, 0x53, 0x22, 0x33, 0x0a,
	0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x66, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x66, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x78,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x53, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x53, 0x12,
	0x32, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x34, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e,
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x66, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x66, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x65, 0x78, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6e, 0x65, 0x78, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e,
	0x61, 0x76, 0x33, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a,
	0x3b, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x2d, 0x0a, 0x0c,
	0x54, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x0d, 0x0a, 0x09,
	0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44,
	0x45, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x32, 0x9a, 0x05, 0x0a, 0x0f,
	0x47, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x50, 0x49, 0x12,
	0x60, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x73, 0x12, 0x23, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x72, 0x61, 0x66,
	0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61,
	0x6e, 0x61, 0x76, 0x33, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61,
	0x6e, 0x61, 0x76, 0x33, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e,
	0x61, 0x76, 0x33, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x67,
	0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x61,
	0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x2e,
	0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61,
	0x6e, 0x61, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67,
	0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x67, 0x72, 0x61, 0x66,
	0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x36, 0x62, 0x69, 0x74, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x69, 0x6e, 0x6e, 0x69, 0x75, 0x73,
	0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2d, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x2d,
	0x67, 0x72, 0x70, 0x63, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f,
	0x76, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_v3_apiv3_proto_rawDescOnce sync.Once
	file_pkg_proto_v3_apiv3_proto_rawDescData = file_pkg_proto_v3_apiv3_proto_rawDesc
)

func file_pkg_proto_v3_apiv3_proto_rawDescGZIP() []byte {
	file_pkg_proto_v3_apiv3_proto_rawDescOnce.Do(func() {
		file_pkg_proto_v3_apiv3_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_v3_apiv3_proto_rawDescData)
	})
	return file_pkg_proto_v3_apiv3_proto_rawDescData
}

var file_pkg_proto_v3_apiv3_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_pkg_proto_v3_apiv3_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_pkg_proto_v3_apiv3_proto_goTypes = []interface{}{
	(TimeOrdering)(0),                          // 0: grafanav3.TimeOrdering
	(GetOptionsRequest_QueryType)(0),           // 1: grafanav3.GetOptionsRequest.QueryType
	(Option_Type)(0),                           // 2: grafanav3.Option.Type
	(FrameMeta_FrameType)(0),                   // 3: grafanav3.FrameMeta.FrameType
	(FrameMeta_VisType)(0),                     // 4: grafanav3.FrameMeta.VisType
	(FrameMeta_Notice_NoticeSeverity)(0),       // 5: grafanav3.FrameMeta.Notice.NoticeSeverity
	(FrameMeta_Notice_InspectType)(0),          // 6: grafanav3.FrameMeta.Notice.InspectType
	(*ListMetricsRequest)(nil),                 // 7: grafanav3.ListMetricsRequest
	(*ListMetricsResponse)(nil),                // 8: grafanav3.ListMetricsResponse
	(*GetMetricValueRequest)(nil),              // 9: grafanav3.GetMetricValueRequest
	(*GetMetricValueResponse)(nil),             // 10: grafanav3.GetMetricValueResponse
	(*GetOptionsRequest)(nil),                  // 11: grafanav3.GetOptionsRequest
	(*EnumValue)(nil),                          // 12: grafanav3.EnumValue
	(*Option)(nil),                             // 13: grafanav3.Option
	(*GetOptionsResponse)(nil),                 // 14: grafanav3.GetOptionsResponse
	(*GetMetricAggregateRequest)(nil),          // 15: grafanav3.GetMetricAggregateRequest
	(*GetMetricAggregateResponse)(nil),         // 16: grafanav3.GetMetricAggregateResponse
	(*GetMetricHistoryRequest)(nil),            // 17: grafanav3.GetMetricHistoryRequest
	(*GetMetricHistoryResponse)(nil),           // 18: grafanav3.GetMetricHistoryResponse
	(*Label)(nil),                              // 19: grafanav3.Label
	(*Field)(nil),                              // 20: grafanav3.Field
	(*ValueMapping)(nil),                       // 21: grafanav3.ValueMapping
	(*Config)(nil),                             // 22: grafanav3.config
	(*SingleValueField)(nil),                   // 23: grafanav3.SingleValueField
	(*Frame)(nil),                              // 24: grafanav3.Frame
	(*FrameMeta)(nil),                          // 25: grafanav3.FrameMeta
	(*ListDimensionKeysRequest)(nil),           // 26: grafanav3.ListDimensionKeysRequest
	(*ListDimensionKeysResponse)(nil),          // 27: grafanav3.ListDimensionKeysResponse
	(*ListDimensionValuesRequest)(nil),         // 28: grafanav3.ListDimensionValuesRequest
	(*ListDimensionValuesResponse)(nil),        // 29: grafanav3.ListDimensionValuesResponse
	(*TimeRange)(nil),                          // 30: grafanav3.TimeRange
	(*Dimension)(nil),                          // 31: grafanav3.Dimension
	(*QueryRequest)(nil),                       // 32: grafanav3.QueryRequest
	(*QueryResponse)(nil),                      // 33: grafanav3.QueryResponse
	(*ListMetricsResponse_Metric)(nil),         // 34: grafanav3.ListMetricsResponse.Metric
	nil,                                        // 35: grafanav3.GetMetricValueRequest.OptionsEntry
	(*GetMetricValueResponse_Frame)(nil),       // 36: grafanav3.GetMetricValueResponse.Frame
	nil,                                        // 37: grafanav3.GetMetricAggregateRequest.OptionsEntry
	nil,                                        // 38: grafanav3.GetMetricHistoryRequest.OptionsEntry
	(*FrameMeta_Notice)(nil),                   // 39: grafanav3.FrameMeta.Notice
	(*ListDimensionKeysResponse_Result)(nil),   // 40: grafanav3.ListDimensionKeysResponse.Result
	(*ListDimensionValuesResponse_Result)(nil), // 41: grafanav3.ListDimensionValuesResponse.Result
	(*QueryResponse_Value)(nil),                // 42: grafanav3.QueryResponse.Value
	(*timestamppb.Timestamp)(nil),              // 43: google.protobuf.Timestamp
}
var file_pkg_proto_v3_apiv3_proto_depIdxs = []int32{
	31, // 0: grafanav3.ListMetricsRequest.dimensions:type_name -> grafanav3.Dimension
	34, // 1: grafanav3.ListMetricsResponse.Metrics:type_name -> grafanav3.ListMetricsResponse.Metric
	31, // 2: grafanav3.GetMetricValueRequest.dimensions:type_name -> grafanav3.Dimension
	35, // 3: grafanav3.GetMetricValueRequest.options:type_name -> grafanav3.GetMetricValueRequest.OptionsEntry
	36, // 4: grafanav3.GetMetricValueResponse.frames:type_name -> grafanav3.GetMetricValueResponse.Frame
	1,  // 5: grafanav3.GetOptionsRequest.queryType:type_name -> grafanav3.GetOptionsRequest.QueryType
	2,  // 6: grafanav3.Option.type:type_name -> grafanav3.Option.Type
	12, // 7: grafanav3.Option.enumValues:type_name -> grafanav3.EnumValue
	13, // 8: grafanav3.GetOptionsResponse.options:type_name -> grafanav3.Option
	31, // 9: grafanav3.GetMetricAggregateRequest.dimensions:type_name -> grafanav3.Dimension
	43, // 10: grafanav3.GetMetricAggregateRequest.startDate:type_name -> google.protobuf.Timestamp
	43, // 11: grafanav3.GetMetricAggregateRequest.endDate:type_name -> google.protobuf.Timestamp
	0,  // 12: grafanav3.GetMetricAggregateRequest.timeOrdering:type_name -> grafanav3.TimeOrdering
	37, // 13: grafanav3.GetMetricAggregateRequest.options:type_name -> grafanav3.GetMetricAggregateRequest.OptionsEntry
	24, // 14: grafanav3.GetMetricAggregateResponse.frames:type_name -> grafanav3.Frame
	31, // 15: grafanav3.GetMetricHistoryRequest.dimensions:type_name -> grafanav3.Dimension
	43, // 16: grafanav3.GetMetricHistoryRequest.startDate:type_name -> google.protobuf.Timestamp
	43, // 17: grafanav3.GetMetricHistoryRequest.endDate:type_name -> google.protobuf.Timestamp
	0,  // 18: grafanav3.GetMetricHistoryRequest.timeOrdering:type_name -> grafanav3.TimeOrdering
	38, // 19: grafanav3.GetMetricHistoryRequest.options:type_name -> grafanav3.GetMetricHistoryRequest.OptionsEntry
	24, // 20: grafanav3.GetMetricHistoryResponse.frames:type_name -> grafanav3.Frame
	19, // 21: grafanav3.Field.labels:type_name -> grafanav3.Label
	22, // 22: grafanav3.Field.config:type_name -> grafanav3.config
	21, // 23: grafanav3.config.Mappings:type_name -> grafanav3.ValueMapping
	19, // 24: grafanav3.SingleValueField.labels:type_name -> grafanav3.Label
	22, // 25: grafanav3.SingleValueField.config:type_name -> grafanav3.config
	43, // 26: grafanav3.Frame.timestamps:type_name -> google.protobuf.Timestamp
	20, // 27: grafanav3.Frame.fields:type_name -> grafanav3.Field
	25, // 28: grafanav3.Frame.meta:type_name -> grafanav3.FrameMeta
	3,  // 29: grafanav3.FrameMeta.type:type_name -> grafanav3.FrameMeta.FrameType
	39, // 30: grafanav3.FrameMeta.Notices:type_name -> grafanav3.FrameMeta.Notice
	4,  // 31: grafanav3.FrameMeta.PreferredVisualization:type_name -> grafanav3.FrameMeta.VisType
	31, // 32: grafanav3.ListDimensionKeysRequest.selected_dimensions:type_name -> grafanav3.Dimension
	40, // 33: grafanav3.ListDimensionKeysResponse.results:type_name -> grafanav3.ListDimensionKeysResponse.Result
	31, // 34: grafanav3.ListDimensionValuesRequest.selected_dimensions:type_name -> grafanav3.Dimension
	41, // 35: grafanav3.ListDimensionValuesResponse.results:type_name -> grafanav3.ListDimensionValuesResponse.Result
	30, // 36: grafanav3.QueryRequest.timeRange:type_name -> grafanav3.TimeRange
	31, // 37: grafanav3.QueryRequest.dimensions:type_name -> grafanav3.Dimension
	42, // 38: grafanav3.QueryResponse.values:type_name -> grafanav3.QueryResponse.Value
	43, // 39: grafanav3.GetMetricValueResponse.Frame.timestamp:type_name -> google.protobuf.Timestamp
	23, // 40: grafanav3.GetMetricValueResponse.Frame.fields:type_name -> grafanav3.SingleValueField
	25, // 41: grafanav3.GetMetricValueResponse.Frame.meta:type_name -> grafanav3.FrameMeta
	5,  // 42: grafanav3.FrameMeta.Notice.Severity:type_name -> grafanav3.FrameMeta.Notice.NoticeSeverity
	6,  // 43: grafanav3.FrameMeta.Notice.inspect:type_name -> grafanav3.FrameMeta.Notice.InspectType
	26, // 44: grafanav3.GrafanaQueryAPI.ListDimensionKeys:input_type -> grafanav3.ListDimensionKeysRequest
	28, // 45: grafanav3.GrafanaQueryAPI.ListDimensionValues:input_type -> grafanav3.ListDimensionValuesRequest
	7,  // 46: grafanav3.GrafanaQueryAPI.ListMetrics:input_type -> grafanav3.ListMetricsRequest
	11, // 47: grafanav3.GrafanaQueryAPI.GetQueryOptions:input_type -> grafanav3.GetOptionsRequest
	9,  // 48: grafanav3.GrafanaQueryAPI.GetMetricValue:input_type -> grafanav3.GetMetricValueRequest
	17, // 49: grafanav3.GrafanaQueryAPI.GetMetricHistory:input_type -> grafanav3.GetMetricHistoryRequest
	15, // 50: grafanav3.GrafanaQueryAPI.GetMetricAggregate:input_type -> grafanav3.GetMetricAggregateRequest
	27, // 51: grafanav3.GrafanaQueryAPI.ListDimensionKeys:output_type -> grafanav3.ListDimensionKeysResponse
	29, // 52: grafanav3.GrafanaQueryAPI.ListDimensionValues:output_type -> grafanav3.ListDimensionValuesResponse
	8,  // 53: grafanav3.GrafanaQueryAPI.ListMetrics:output_type -> grafanav3.ListMetricsResponse
	14, // 54: grafanav3.GrafanaQueryAPI.GetQueryOptions:output_type -> grafanav3.GetOptionsResponse
	10, // 55: grafanav3.GrafanaQueryAPI.GetMetricValue:output_type -> grafanav3.GetMetricValueResponse
	18, // 56: grafanav3.GrafanaQueryAPI.GetMetricHistory:output_type -> grafanav3.GetMetricHistoryResponse
	16, // 57: grafanav3.GrafanaQueryAPI.GetMetricAggregate:output_type -> grafanav3.GetMetricAggregateResponse
	51, // [51:58] is the sub-list for method output_type
	44, // [44:51] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_pkg_proto_v3_apiv3_proto_init() }
func file_pkg_proto_v3_apiv3_proto_init() {
	if File_pkg_proto_v3_apiv3_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_v3_apiv3_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricAggregateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricAggregateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleValueField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricsResponse_Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricValueResponse_Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameMeta_Notice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionKeysResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionValuesResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_v3_apiv3_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_v3_apiv3_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_v3_apiv3_proto_goTypes,
		DependencyIndexes: file_pkg_proto_v3_apiv3_proto_depIdxs,
		EnumInfos:         file_pkg_proto_v3_apiv3_proto_enumTypes,
		MessageInfos:      file_pkg_proto_v3_apiv3_proto_msgTypes,
	}.Build()
	File_pkg_proto_v3_apiv3_proto = out.File
	file_pkg_proto_v3_apiv3_proto_rawDesc = nil
	file_pkg_proto_v3_apiv3_proto_goTypes = nil
	file_pkg_proto_v3_apiv3_proto_depIdxs = nil
}
